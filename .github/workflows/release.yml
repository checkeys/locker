name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  PyPI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install
        run: |
          python -m pip install --upgrade pip xpip-build xpip-upload
          python -m pip --version
          python -m pip list
      - name: Build and Test
        run: |
          make build install test
      - name: Upload to PyPI
        run: |
          xpip-upload --token ${{ secrets.PYPI_TOKEN }} dist/*

  Build-Locker-Sock:
    needs: PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            mingzhebaosheng/locker-sock
            ghcr.io/podboy/locker-sock
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN_PACKAGES }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile-Sock
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          platforms: linux/amd64, linux/arm64
          build-args: |
            VERSION={{version}}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
